

package com.google.firebase.installations.remote;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;

// Generated by com.google.auto.value.processor.AutoValueProcessor
final class AutoValue_TokenResult extends TokenResult {

  private final String token;

  private final long tokenExpirationTimestamp;

  private final TokenResult.ResponseCode responseCode;

  private AutoValue_TokenResult(
      @Nullable String token,
      long tokenExpirationTimestamp,
      @Nullable TokenResult.ResponseCode responseCode) {
    this.token = token;
    this.tokenExpirationTimestamp = tokenExpirationTimestamp;
    this.responseCode = responseCode;
  }

  @Nullable
  @Override
  public String getToken() {
    return token;
  }

  @NonNull
  @Override
  public long getTokenExpirationTimestamp() {
    return tokenExpirationTimestamp;
  }

  @Nullable
  @Override
  public TokenResult.ResponseCode getResponseCode() {
    return responseCode;
  }

  @Override
  public String toString() {
    return "TokenResult{"
         + "token=" + token + ", "
         + "tokenExpirationTimestamp=" + tokenExpirationTimestamp + ", "
         + "responseCode=" + responseCode
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof TokenResult) {
      TokenResult that = (TokenResult) o;
      return ((this.token == null) ? (that.getToken() == null) : this.token.equals(that.getToken()))
           && (this.tokenExpirationTimestamp == that.getTokenExpirationTimestamp())
           && ((this.responseCode == null) ? (that.getResponseCode() == null) : this.responseCode.equals(that.getResponseCode()));
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= (token == null) ? 0 : token.hashCode();
    h$ *= 1000003;
    h$ ^= (int) ((tokenExpirationTimestamp >>> 32) ^ tokenExpirationTimestamp);
    h$ *= 1000003;
    h$ ^= (responseCode == null) ? 0 : responseCode.hashCode();
    return h$;
  }

  @Override
  public TokenResult.Builder toBuilder() {
    return new Builder(this);
  }

  static final class Builder extends TokenResult.Builder {
    private String token;
    private Long tokenExpirationTimestamp;
    private TokenResult.ResponseCode responseCode;
    Builder() {
    }
    private Builder(TokenResult source) {
      this.token = source.getToken();
      this.tokenExpirationTimestamp = source.getTokenExpirationTimestamp();
      this.responseCode = source.getResponseCode();
    }
    @Override
    public TokenResult.Builder setToken(String token) {
      this.token = token;
      return this;
    }
    @Override
    public TokenResult.Builder setTokenExpirationTimestamp(long tokenExpirationTimestamp) {
      this.tokenExpirationTimestamp = tokenExpirationTimestamp;
      return this;
    }
    @Override
    public TokenResult.Builder setResponseCode(TokenResult.ResponseCode responseCode) {
      this.responseCode = responseCode;
      return this;
    }
    @Override
    public TokenResult build() {
      String missing = "";
      if (this.tokenExpirationTimestamp == null) {
        missing += " tokenExpirationTimestamp";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_TokenResult(
          this.token,
          this.tokenExpirationTimestamp,
          this.responseCode);
    }
  }

}
