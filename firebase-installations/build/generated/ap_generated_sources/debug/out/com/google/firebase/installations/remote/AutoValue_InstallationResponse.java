

package com.google.firebase.installations.remote;

import androidx.annotation.Nullable;

// Generated by com.google.auto.value.processor.AutoValueProcessor
final class AutoValue_InstallationResponse extends InstallationResponse {

  private final String uri;

  private final String fid;

  private final String refreshToken;

  private final TokenResult authToken;

  private final InstallationResponse.ResponseCode responseCode;

  private AutoValue_InstallationResponse(
      @Nullable String uri,
      @Nullable String fid,
      @Nullable String refreshToken,
      @Nullable TokenResult authToken,
      @Nullable InstallationResponse.ResponseCode responseCode) {
    this.uri = uri;
    this.fid = fid;
    this.refreshToken = refreshToken;
    this.authToken = authToken;
    this.responseCode = responseCode;
  }

  @Nullable
  @Override
  public String getUri() {
    return uri;
  }

  @Nullable
  @Override
  public String getFid() {
    return fid;
  }

  @Nullable
  @Override
  public String getRefreshToken() {
    return refreshToken;
  }

  @Nullable
  @Override
  public TokenResult getAuthToken() {
    return authToken;
  }

  @Nullable
  @Override
  public InstallationResponse.ResponseCode getResponseCode() {
    return responseCode;
  }

  @Override
  public String toString() {
    return "InstallationResponse{"
         + "uri=" + uri + ", "
         + "fid=" + fid + ", "
         + "refreshToken=" + refreshToken + ", "
         + "authToken=" + authToken + ", "
         + "responseCode=" + responseCode
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof InstallationResponse) {
      InstallationResponse that = (InstallationResponse) o;
      return ((this.uri == null) ? (that.getUri() == null) : this.uri.equals(that.getUri()))
           && ((this.fid == null) ? (that.getFid() == null) : this.fid.equals(that.getFid()))
           && ((this.refreshToken == null) ? (that.getRefreshToken() == null) : this.refreshToken.equals(that.getRefreshToken()))
           && ((this.authToken == null) ? (that.getAuthToken() == null) : this.authToken.equals(that.getAuthToken()))
           && ((this.responseCode == null) ? (that.getResponseCode() == null) : this.responseCode.equals(that.getResponseCode()));
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= (uri == null) ? 0 : uri.hashCode();
    h$ *= 1000003;
    h$ ^= (fid == null) ? 0 : fid.hashCode();
    h$ *= 1000003;
    h$ ^= (refreshToken == null) ? 0 : refreshToken.hashCode();
    h$ *= 1000003;
    h$ ^= (authToken == null) ? 0 : authToken.hashCode();
    h$ *= 1000003;
    h$ ^= (responseCode == null) ? 0 : responseCode.hashCode();
    return h$;
  }

  @Override
  public InstallationResponse.Builder toBuilder() {
    return new Builder(this);
  }

  static final class Builder extends InstallationResponse.Builder {
    private String uri;
    private String fid;
    private String refreshToken;
    private TokenResult authToken;
    private InstallationResponse.ResponseCode responseCode;
    Builder() {
    }
    private Builder(InstallationResponse source) {
      this.uri = source.getUri();
      this.fid = source.getFid();
      this.refreshToken = source.getRefreshToken();
      this.authToken = source.getAuthToken();
      this.responseCode = source.getResponseCode();
    }
    @Override
    public InstallationResponse.Builder setUri(String uri) {
      this.uri = uri;
      return this;
    }
    @Override
    public InstallationResponse.Builder setFid(String fid) {
      this.fid = fid;
      return this;
    }
    @Override
    public InstallationResponse.Builder setRefreshToken(String refreshToken) {
      this.refreshToken = refreshToken;
      return this;
    }
    @Override
    public InstallationResponse.Builder setAuthToken(TokenResult authToken) {
      this.authToken = authToken;
      return this;
    }
    @Override
    public InstallationResponse.Builder setResponseCode(InstallationResponse.ResponseCode responseCode) {
      this.responseCode = responseCode;
      return this;
    }
    @Override
    public InstallationResponse build() {
      return new AutoValue_InstallationResponse(
          this.uri,
          this.fid,
          this.refreshToken,
          this.authToken,
          this.responseCode);
    }
  }

}
